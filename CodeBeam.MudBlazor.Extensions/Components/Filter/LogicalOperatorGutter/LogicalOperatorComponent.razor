@namespace MudExtensions
@inherits MudComponentBase
@typeparam T

@if (IsCompoundPredicate)
{
    @RenderMudTextContent((int i) => i == (Depth - 1))
}

@if (IsAtomicPredicate && !IsFirstElement)
{
    @RenderMudTextContent((int i) => Depth == 0 || i == Depth)
}

@code {
    RenderFragment RenderMudTextContent(Func<int, bool> textContentCondition)
    {
        return
    @<text>
        @for (int i = 0; i <= Depth; i++)
        {
            string textContent = textContentCondition(i) ? $"{ParentLogicalOperator}" : string.Empty;

            if (!string.IsNullOrWhiteSpace(textContent))
            {
                <MudTextM3 Class="mud-logical-operator">@textContent</MudTextM3>
            }
            else if (i != Depth)
            {
                <div class="mud-logical-operator" />
            }
        }
    </text>;
    }
}
