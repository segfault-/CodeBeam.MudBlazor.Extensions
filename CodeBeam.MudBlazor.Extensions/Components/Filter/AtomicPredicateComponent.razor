@namespace MudExtensions
@using System.Linq.Expressions;
@inherits MudComponentBase
@typeparam T

<div class="@ClassName" style="@StyleString">
    <MudStack Class="mud-ap-stack" Row="true">
        @if(IsFirstElement)
        {
            <MudTextM3 Class="mud-logical-operator"></MudTextM3>
        }
        else
        {
            CompoundPredicateLogicalOperator

            @AtomicPredicate.Parent?.

            <MudTextM3 Class="mud-logical-operator">@LogicalOperator</MudTextM3>
        }

        <MudRadioGroup Class="mud-cp-radio-group" @bind-SelectedOption="@LogicalOperator" T="CompoundPredicateLogicalOperator">
            <MudRadio Option="CompoundPredicateLogicalOperator.And" Size="Size.Small" Color="Color.Primary" UnCheckedColor="Color.Default">And</MudRadio>
            <MudRadio Option="CompoundPredicateLogicalOperator.Or" Size="Size.Small" Color="Color.Secondary" UnCheckedColor="Color.Default">Or</MudRadio>
        </MudRadioGroup>


        <CascadingValue Value="@Filter" IsFixed="true">
            <PropertySelectComponent T="T" Filter="@Filter" @bind-AtomicPredicate="@AtomicPredicate" PropertySelectChanged="OnPropertySelectChangedAsync" />
        </CascadingValue>
        <OperatorSelectComponent @bind-AtomicPredicate="@AtomicPredicate" />
        <ValueFieldComponent @bind-AtomicPredicate="AtomicPredicate" />
        <MudIconButton Class="mud-ap-remove" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" OnClick="RemovePredicateUnit" />
    </MudStack>
</div>